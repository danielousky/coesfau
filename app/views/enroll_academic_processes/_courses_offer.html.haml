
%table#courses_offer.table.table-striped.table-sm.table-hover.table-bordered.responsive-table
  %thead{style: "position: sticky;top: 0"}
    %tr
      %th.text-center.table-primary{colspan: 5} Asignaturas Ofertadas
      
    %tr.table-primary
      %th.headers{style: 'width: 56%', scope: :col}
        .input-group.input-group-sm{style: 'width: 100%;'}
          %input.form-control{"aria-describedby" => "inputGroup-sizing-sm", "aria-label" => "", type: "text", onkeyup: 'filterSections(this);', placeholder: 'Buscar Asignatura', autofocus: true, id: 'filterOffer', name: 'filterOffer'}

      %th.headers{style: 'width: 5%', scope: :col} Sem
      %th.headers{style: 'width: 5%', scope: :col} Créd
      %th.text-center.headers{style: 'width: 30%;', scope: :col} Sección
  %tbody
    - courses.each do |course|
      - @short_desc = ""
      - approved_record = grade.academic_records.aprobado.joins(:subject).where('subject.id': course.subject_id).first
      - if !grade.subject_approved? course.subject_id
        - if grade.student.Caracas?
          - sections = course.sections.where.not("sections.code ILIKE '%E%'")#.con_cupos
        - else
          - sections = course.sections.where("sections.code ILIKE '%E%'")#.con_cupos

        - if current_record = grade.academic_records.joins(:course).where('courses.id': course.id).first
          - section_id = current_record&.section_id # ? ac.section_id : nil
          - if current_record&.retirado?
            - trStatus = 'text-muted border table-danger'
            - @course_desc = current_record.badge_status.html_safe
          - elsif (!section_id.nil?)
            - trStatus = 'table-success'
          - else
            - trStatus = ''

        - elsif last_tryed_record = grade.academic_records.joins(:subject, :academic_process).where('subject.id': course.subject_id, 'academic_processes.id': @process_before&.id).order('academic_processes.name': :desc).first  
          - if last_tryed_record&.pi? #and !current_user&.admin?
            - trStatus = 'text-muted border table-danger'
            - before_process_name = @process_before&.period&.name
            - @course_desc = "<span class= 'badge bg-danger'> Pérdida por Inasistencia en #{before_process_name} </span>".html_safe
            - @short_desc = "(PI en #{before_process_name})"
        - # ATENCIÓN: El scope "con_cupos" no va, ya que es importante seleccionar secciones que haya inscrito o con cupos juntas. Esto con el objetivo de que luego pueda cambiar secciones
        - if sections.any?
          - subject = course.subject
          %tr{class: "#{trStatus}"}
            %td.align-middle
              = course.subject_desc_with_pci
              = @short_desc
            %td.align-middle.text-center= subject.ordinal
            %td.align-middle.text-center= subject.unit_credits
            %td.align-middle.pl-3              
              - if current_record&.retirado?
                .text-center.text-muted= @course_desc
              - elsif last_tryed_record&.pi? and !current_user&.admin?
                .text-center.text-muted= @course_desc
              - else
                - sections = sections.select{|s| s.has_capacity? or s.has_academic_record? grade.student_id or s.id.eql? section_id}
                - disable_promt = ''
                - if sections.any?
                  = collection_select("sections", nil, sections, :id, :description_with_quotes, {selected: section_id, include_blank: 'Seleccione sección o libere cupo'}, {class: "form-control selectInscripcion", style: 'width: 100%', titulo: subject.desc_to_select, credits: subject.unit_credits, gradeId: grade.id, courseId: course.id, pci: pcis, onchange: "selected(this);", name: "sections_course_id_#{course.id}", id: "sections_course_id_#{course.id}"})
                - else
                  - disable_promt = 'Sin cupos'
                  %b.pl-3.text-muted
                    = collection_select(nil, nil, sections, nil, nil, { prompt: disable_promt}, {class: "form-control", style: 'width: 100%', disabled: true, readonly: true, name: "sections_void#{course.id}", id: "sections_void#{course.id}"})

